.app:
  extends: .build
  variables:
    TARGET: app
  artifacts:
    paths:
      - churros.apk
      - output-metadata.json

.build:app:
  extends: .app
  stage: build
  needs: 
    - job: test:app:lint
      optional: true
    - job: test:app:format
      optional: true
    - job: test:app:svelte-check
      optional: true
  variables:
    BUILD_APK: "false"
    SIGN_APK: "false"
  script:
    - !reference [.build, script]
    - |
      if [ "$SIGN_APK" == "true" ]; then \
        if [ -n "$APK_KEYSTORE_BASE64" ]; then \
          export BUILD_SECRET_APK_KEYSTORE_BASE64="--secret id=APK_KEYSTORE_BASE64"; \
        else \
          export BUILD_SECRET_APK_KEYSTORE_BASE64=""; \
        fi; \
        if [ -n "$APK_KEYSTORE_PASSWORD" ]; then \
          export BUILD_SECRET_APK_KEYSTORE_PASSWORD="--secret id=APK_KEYSTORE_PASSWORD"; \
        else \
          export BUILD_SECRET_APK_KEYSTORE_PASSWORD=""; \
        fi; \
      fi
    - if [ "$SIGN_APK" == "true" ]; then export APK_TYPE=release; else export APK_TYPE=debug; fi
    - |
      if [ "$BUILD_APK" == "true" ]; then \
        buildctl-daemonless.sh build \
            --frontend=dockerfile.v0 \
            --local context=. \
            --local dockerfile=. \
            --opt target=android-$APK_TYPE \
            --opt build-arg:TAG=$TAG \
            --opt build-arg:CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX=$CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX \
            --opt build-arg:APK_KEY_ALIAS=$APK_KEY_ALIAS \
            $BUILD_SECRET_SENTRY \
            $BUILD_SECRET_APK_KEYSTORE_BASE64 \
            $BUILD_SECRET_APK_KEYSTORE_PASSWORD \
            --output type=local,dest=.; \
        ls -la .; \
        mv app-$APK_TYPE.apk churros.apk; \
      fi

build:app:
  extends: .build:app
  rules: 
    - if: >-
        $CI_PIPELINE_SOURCE == "merge_request_event" && 
        $CI_MERGE_REQUEST_TITLE !~ /^(\[Draft\]|\(Draft\)|Draft:)/ &&
        $CI_MERGE_REQUEST_LABELS !~ /android/ && 
        $CI_MERGE_REQUEST_LABELS !~ /ios/ &&
        $CI_MERGE_REQUEST_LABELS !~ /native:signed/
      changes: [packages/app/**/*]
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /^(\[Draft\]|\(Draft\)|Draft:)/
      when: manual

.build:app-with-native:
  extends: .build:app
  artifacts:
    expire_in: 4 days
    paths: [churros.apk, output-metadata.json]
  variables:
    BUILD_APK: "true"
    SIGN_APK: "false"
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_FORCE_HTTPS: "true"

build:app-with-native-unsigned:
  extends: .build:app-with-native
  rules: 
    - if: >-
        $CI_PIPELINE_SOURCE == "merge_request_event" && 
        $CI_MERGE_REQUEST_TITLE !~ /^(\[Draft\]|\(Draft\)|Draft:)/ &&
        $CI_MERGE_REQUEST_LABELS =~ /android|ios/ && 
        $CI_MERGE_REQUEST_LABELS !~ /native:signed/

build:app-with-native-signed:
  extends: .build:app-with-native
  variables:
    SIGN_APK: "true"
  rules:
    - if: >-
        $CI_PIPELINE_SOURCE == "merge_request_event" && 
        $CI_MERGE_REQUEST_TITLE !~ /^(\[Draft\]|\(Draft\)|Draft:)/ &&
        $CI_MERGE_REQUEST_LABELS =~ /android|ios/ && 
        $CI_MERGE_REQUEST_LABELS =~ /native:signed/

deploy:apk:
  stage: deploy
  needs: 
    - job: build:app-with-native
      optional: true
    - job: build:app-with-native-signed
      optional: true
    - job: deploy:app
      optional: true
  image: curlimages/curl
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_COMMIT_TAG =~ /^@churros\/app@(\d+\.\d+\.\d+)/
  script:
    - |
      curl https://upload.diawi.com/ -F token="$DIAWI_TOKEN" \
        -F file=@churros.apk \
        -F callback_emails="$GITLAB_USER_EMAIL" \
        -F comment="APK built against $CI_COMMIT_SHA in $CI_PIPELINE_URL"

deploy:app:
  extends: .build:app-with-native
  stage: deploy
  interruptible: false
  rules:
    - if: $CI_COMMIT_TAG =~ /^@churros\/app@(\d+\.\d+\.\d+)/
      variables:
        ENV: "production"
        URL: "https://churros.inpt.fr"
        TAG: export TAG=$(echo $CI_COMMIT_TAG | sed 's/@churros\/app@//')
        DEPLOY: "true"
        SIGN_APK: "true"
  environment:
    name: $ENV
    url: $URL
